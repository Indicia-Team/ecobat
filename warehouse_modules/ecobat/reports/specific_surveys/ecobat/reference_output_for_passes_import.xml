<report
    title="Reference output for an import of passes data"
    description="Basic output of a reference range calculation based on an import of passes data."
    summary="true"
>
  <query>
    drop table if exists ecobat_range_sizes;
    select external_key, count(distinct id)
    into temporary ecobat_range_sizes
    from ecobat_occurrences
    where autogenerated=false
    #filters#
	  group by external_key;

    select #columns#
    from (
      select *, percent_rank() over (order by passes_summed) as percentile from (
        select import_guid, id, autogenerated, max(passes_summed) as passes_summed
        from ecobat_occurrences o
        where 1=1
        #filters#
        group by import_guid, id, autogenerated
      ) as sub
    ) as fullset
    join ecobat_occurrence_passes eop ON eop.ecobat_occurrence_id=fullset.id
    join cache_taxa_taxon_lists cttl on cttl.id=eop.taxa_taxon_list_id
    join ecobat_range_sizes rs on rs.external_key=cttl.external_key
    join cache_termlists_terms tpassdef on tpassdef.id=eop.pass_definition_id
    left join cache_termlists_terms tdetectmake on tdetectmake.id=eop.detector_make_id
    left join cache_termlists_terms tlinfeatadj on tlinfeatadj.id=eop.linear_feature_adjacent_id
    left join cache_termlists_terms tlinfeat25m on tlinfeat25m.id=eop.linear_feature_25m_id
    left join cache_termlists_terms tanthfeatadj on tanthfeatadj.id=eop.anthropogenic_feature_adjacent_id
    left join cache_termlists_terms tanthfeat25m on tanthfeat25m.id=eop.anthropogenic_feature_25m_id
    left join cache_termlists_terms train on train.id=eop.rainfall_id
    where fullset.import_guid='#input_import_guid#'
    and fullset.autogenerated=false
      and 88 in (#website_ids#) -- ensure permissions OK
  </query>
  <order_bys>
    <order_by>cttl.preferred_taxon, eop.date_start</order_by>
  </order_bys>
  <params>
    <param name="filter_spatial_km" display="Limit area km" datatype="integer" default=""
           description="Number of km of radius to limit the reference set to." >
      <where>
        -- Rough bounding box match that indexes can work from
        easting BETWEEN #input_x#-#filter_spatial_km#*1000 and #input_x#+#filter_spatial_km#*1000
        AND northing BETWEEN #input_y#-#filter_spatial_km#*1000 and #input_y#+#filter_spatial_km#*1000
        -- Exact match
        AND |/ ((#input_x# - easting) ^ 2 + (#input_y# - northing) ^ 2) &lt; #filter_spatial_km#*1000
      </where>
    </param>
    <param name="filter_date" display="Limit day in year" datatype="boolean" default=""
           description="Limit to records +/- 30 days of the input" >
      <where>
        day_of_year &gt;= #input_doy_from#-30 and day_of_year &lt;= #input_doy_to#+30
      </where>
    </param>
    <param name="filter_detector_make" display="Limit to detector make" datatype="integer" default="">
      <where>detector_make_id=#filter_detector_make#</where>
    </param>
    <param name="filter_temp" display="Limit to similar temperature" datatype="boolean" default=""
           description="Limit to records +/- 2deg of the input" >
      <where>temperature_c between #input_temp_low#-2 and #input_temp_high#+2</where>
    </param>
    <param name="filter_wind" display="Limit to similar wind speed" datatype="boolean" default=""
           description="Limit to records +/- 2mph of the input" >
      <where>wind_speed_mph between #input_wind_low#-2 and #input_wind_high#+2</where>
    </param>
    <param name="filter_pass_definition" display="Limit to the same pass definition" datatype="boolean" default=""
           description="Limit to records which have the same pass definition as those in the import">
      <where>pass_definition_id in (#input_pass_definition_ids#)</where>
    </param>
    <param name="input_import_guid" display="Import unique ID" datatype="text" />
    <param name="input_doy_from" display="From day of year" datatype="integer" default=""
           description="First day of year (0-364/5) in the imported records list to compare against" />
    <param name="input_doy_to" display="To day of year" datatype="integer" default=""
           description="Last day of year (0-364/5) in the imported records list to compare against" />
    <param name="input_x" display="Easting" description="Average easting value being fed into the analysis" />
    <param name="input_y" display="Northing" description="Average northing value being fed into the analysis" />
    <param name="input_temp_low" display="Temperature low" datatype="float" default="-1000" emptyvalue="-1000"
           description="Lowest temperature at sunset for range of records being input into the report in degC" />
    <param name="input_temp_high" display="Temperature high" datatype="float" default="-1000" emptyvalue="-1000"
           description="Highest temperature at sunset for range of records being input into the report in degC" />
    <param name="input_wind_low" display="Wind speed low" datatype="float" default="-1000" emptyvalue="-1000"
           description="Lowest wind speed at sunset for range of records being input into the report in mph" />
    <param name="input_wind_high" display="Wind speed high" datatype="float" default="-1000" emptyvalue="-1000"
           description="Highest wind speed at sunset for range of records being input into the report in mph" />
    <param name="input_pass_definition_ids" display="Pass definition IDs" datatype="integer[]" default=""
           description="Comma separated IDs of the pass definitions used for records being input into the report" />
    <param name="include_autogenerated" type="boolean" default='f'
           description="Should autogenerated higher taxon data be included" />
  </params>
  <columns>
    <column name="location_name" sql="eop.detector_identity" />
    <column name="lat" sql="eop.lat" />
    <column name="lon" sql="eop.lon" />
    <column name="date" sql="eop.date_start" />
    <column name="time" sql="eop.pass_time" />
    <column name="species_tvk" sql="cttl.external_key" />
    <column name="species" sql="cttl.preferred_taxon" />

    <column name="passes" sql="max(fullset.passes_summed)" aggregate="true" />
    <column name="percentile" sql="max(round(fullset.percentile*100))" aggregate="true" />
    <column name="activity_level" sql="case
  when max(fullset.percentile)&lt;0.2 then 'low'
  when max(fullset.percentile)&lt;0.4 then 'low/medium'
  when max(fullset.percentile)&lt;0.6 then 'medium'
  when max(fullset.percentile)&lt;0.8 then 'medium/high'
  else 'high'
end" aggregate="true" />
    <column name="pass_definition" sql="tpassdef.term" />
    <column name="detector_make" sql="tdetectmake.term" />
    <column name="detector_model" sql="eop.detector_model" />
    <column name="detector_height_m" sql="eop.detector_height_m" />
    <column name="roost_within_25m" sql="case eop.roost_within_25m when true then 'Yes' else 'No' end" />
    <column name="activity_elevated_by_roost" sql="case eop.activity_elevated_by_roost when true then 'Yes' else 'No' end" />
    <column name="roost_species" sql="eop.roost_species" />
    <column name="linear_feature_adjacent" sql="tlinfeatadj.term" />
    <column name="linear_feature_25m" sql="tlinfeat25m.term" />
    <column name="anthropogenic_feature_adjacent" sql="tanthfeatadj.term" />
    <column name="anthropogenic_feature_25m" sql="tanthfeat25m.term" />
    <column name="temperature_c" sql="eop.temperature_c" />
    <column name="rainfall" sql="train.term" />
    <column name="wind_speed_mph" sql="eop.wind_speed_mph" />
    <column name="method_of_classification" sql="eop.method_of_classification" />
    <column name="analysis_software_used" sql="eop.analysis_software_used" />
    <column name="site_name" sql="eop.site_name" />
    <column name="reference_range_size" sql="rs.count" />
    <column name="location_filter" sql="'#filter_spatial_km#'" aggregate="true" />
    <column name="date_filter" sql="'#filter_date#'" aggregate="true" />
    <column name="detector_make_filter" sql="case '#filter_detector_make#' when '' then 'No' else 'Yes' end" aggregate="true" />
  </columns>
</report>